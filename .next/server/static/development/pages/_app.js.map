{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./config/apollo.js","webpack:///./context/pedidos/PedidoContext.js","webpack:///./context/pedidos/PedidoReducer.js","webpack:///./context/pedidos/PedidoState.js","webpack:///./pages/_app.js","webpack:///./types/index.js","webpack:///external \"@apollo/client\"","webpack:///external \"apollo-link-context\"","webpack:///external \"node-fetch\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport fetch from 'node-fetch'\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:4000/',\n    fetch   \n});\n\nconst authLink = setContext((_, { headers }) => {\n\n    // Leer el storage almacenado\n    const token = localStorage.getItem('token');\n    // console.log(token);\n\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : ''\n        }\n    }\n});\n\n\nconst client = new ApolloClient({\n    connectToDevTools: true,\n    cache: new InMemoryCache(),\n    link: authLink.concat( httpLink )\n});\n\nexport default client;","import { createContext } from 'react';\n\nconst PedidoContext = createContext();\n\nexport default PedidoContext;","import {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\n\nexport default ( state, action ) => {\n    switch(action.type) {\n        case SELECCIONAR_CLIENTE: \n            return {\n                ...state,\n                cliente: action.payload\n            }\n        case SELECCIONAR_PRODUCTO: \n            return {\n                ...state,\n                productos: action.payload\n            }\n        case CANTIDAD_PRODUCTOS:\n            return {\n                ...state,\n                productos: state.productos.map( producto => producto.id === action.payload.id ? producto = action.payload : producto )\n            }\n        case ACTUALIZAR_TOTAL:\n            return {\n                ...state,\n                total: state.productos.reduce( (nuevoTotal, articulo) => nuevoTotal += articulo.precio * articulo.cantidad, 0 )\n            }\n\n        default: \n            return state\n    }\n}","import  React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\n\nimport {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\nconst PedidoState = ({children}) => {\n\n    // State de Pedidos\n    const initialState = {\n        cliente: {},\n        productos: [],\n        total: 0\n    }\n\n    const [ state, dispatch ] = useReducer(PedidoReducer, initialState);\n\n    // Modifica el Cliente\n    const agregarCliente = cliente => {\n        // console.log(cliente);\n\n        dispatch({\n            type: SELECCIONAR_CLIENTE,\n            payload: cliente\n        })\n    }\n\n    // Modifica los productos\n    const agregarProducto = productosSeleccionados => {\n\n        let nuevoState;\n        if(state.productos.length > 0 ) {\n            // Tomar del segundo arreglo, una copia para asignarlo al primero\n            nuevoState = productosSeleccionados.map( producto => {\n                const nuevoObjeto = state.productos.find( productoState => productoState.id === producto.id  );\n                return {...producto, ...nuevoObjeto }\n            } )\n        } else {\n            nuevoState = productosSeleccionados;\n        }\n       \n        dispatch({\n            type: SELECCIONAR_PRODUCTO,\n            payload: nuevoState\n        })\n    }\n\n    // Modifica las cantidades de los productos\n    const cantidadProductos = nuevoProducto => {\n        dispatch({\n            type: CANTIDAD_PRODUCTOS,\n            payload: nuevoProducto\n        })\n    }\n\n    const actualizarTotal = () => {\n        dispatch({\n            type: ACTUALIZAR_TOTAL\n        })\n    }\n\n\n    return (\n        <PedidoContext.Provider\n            value={{\n                cliente: state.cliente,\n                productos: state.productos,\n                total: state.total,\n                agregarCliente,\n                agregarProducto,\n                cantidadProductos,\n                actualizarTotal\n            }}\n        > {children}\n        </PedidoContext.Provider>\n    )\n}\n\nexport default PedidoState;","import { ApolloProvider } from '@apollo/client'\nimport client from '../config/apollo';\nimport PedidoState from '../context/pedidos/PedidoState'\n\nconst MyApp = ({ Component, pageProps}) => {\n    return(\n        <ApolloProvider client={client}>\n            <PedidoState>\n                <Component {...pageProps} />\n            </PedidoState>\n        </ApolloProvider>\n    )\n}\n\nexport default MyApp;","export const SELECCIONAR_CLIENTE = 'SELECCIONAR_CLIENTE';\nexport const SELECCIONAR_PRODUCTO = 'SELECCIONAR_PRODUCTO';\nexport const CANTIDAD_PRODUCTOS = 'CANTIDAD_PRODUCTOS';\nexport const ACTUALIZAR_TOTAL = 'ACTUALIZAR_TOTAL';","module.exports = require(\"@apollo/client\");","module.exports = require(\"apollo-link-context\");","module.exports = require(\"node-fetch\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AADA;AAMA;AAGA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;ACJA;AAQA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAvBA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACHA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}