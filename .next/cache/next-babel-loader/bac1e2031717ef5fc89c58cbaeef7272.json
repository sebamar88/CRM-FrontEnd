{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\components\\\\Pedido.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2';\nvar ACTUALIZAR_PEDIDO = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation actualizarPedido($id: ID!, $input: PedidoInput ) {\\n        actualizarPedido(id: $id, input: $input) {\\n            estado\\n        }\\n    }\\n\"])));\nvar ELIMINAR_PEDIDO = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    mutation eliminarPedido($id: ID!) {\\n        eliminarPedido(id: $id) \\n    }\\n\"])));\nvar OBTENER_PEDIDOS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query obtenerPedidosVendedor {\\n      obtenerPedidosVendedor {\\n        id\\n      }\\n  }\\n\"])));\n\nvar Pedido = function Pedido(_ref) {\n  var pedido = _ref.pedido;\n  var id = pedido.id,\n      total = pedido.total,\n      _pedido$cliente = pedido.cliente,\n      nombre = _pedido$cliente.nombre,\n      apellido = _pedido$cliente.apellido,\n      telefono = _pedido$cliente.telefono,\n      email = _pedido$cliente.email,\n      estado = pedido.estado,\n      cliente = pedido.cliente; // Mutation para cambiar el estado de un pedido\n\n  var _useMutation = useMutation(ACTUALIZAR_PEDIDO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarPedido = _useMutation2[0];\n\n  var _useMutation3 = useMutation(ELIMINAR_PEDIDO, {\n    update: function update(cache) {\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_PEDIDOS\n      }),\n          obtenerPedidosVendedor = _cache$readQuery.obtenerPedidosVendedor;\n\n      cache.writeQuery({\n        query: OBTENER_PEDIDOS,\n        data: {\n          obtenerPedidosVendedor: obtenerPedidosVendedor.filter(function (pedido) {\n            return pedido.id !== id;\n          })\n        }\n      });\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      eliminarPedido = _useMutation4[0]; // console.log(pedido)\n\n\n  var _useState = useState(estado),\n      estadoPedido = _useState[0],\n      setEstadoPedido = _useState[1];\n\n  var _useState2 = useState(''),\n      clase = _useState2[0],\n      setClase = _useState2[1];\n\n  useEffect(function () {\n    if (estadoPedido) {\n      setEstadoPedido(estadoPedido);\n    }\n\n    clasePedido();\n  }, [estadoPedido]); // Función que modifica el color del pedido de acuerdo a su estado\n\n  var clasePedido = function clasePedido() {\n    if (estadoPedido === 'PENDIENTE') {\n      setClase('border-yellow-500');\n    } else if (estadoPedido === 'COMPLETADO') {\n      setClase('border-green-500');\n    } else {\n      setClase('border-red-800');\n    }\n  };\n\n  var cambiarEstadoPedido = function cambiarEstadoPedido(nuevoEstado) {\n    var _await$actualizarPedi, data;\n\n    return _regeneratorRuntime.async(function cambiarEstadoPedido$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(actualizarPedido({\n              variables: {\n                id: id,\n                input: {\n                  estado: nuevoEstado,\n                  cliente: cliente.id\n                }\n              }\n            }));\n\n          case 3:\n            _await$actualizarPedi = _context.sent;\n            data = _await$actualizarPedi.data;\n            setEstadoPedido(data.actualizarPedido.estado);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var confirmarEliminarPedido = function confirmarEliminarPedido() {\n    Swal.fire({\n      title: '¿Deseas eliminar a este pedido?',\n      text: \"Esta acción no se puede deshacer\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, Eliminar',\n      cancelButtonText: 'No, Cancelar'\n    }).then(function _callee(result) {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!result.value) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(eliminarPedido({\n                variables: {\n                  id: id\n                }\n              }));\n\n            case 4:\n              data = _context2.sent;\n              Swal.fire('Eliminado', data.eliminarPedido, 'success');\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \" \".concat(clase, \" border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Cliente: \", nombre, \" \", apellido, \" \"), email && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 170\n    }\n  })), email), telefono && __jsx(\"p\", {\n    className: \"flex items-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, __jsx(\"path\", {\n    d: \"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 170\n    }\n  })), telefono), __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Estado Pedido:\"), __jsx(\"select\", {\n    className: \"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \",\n    value: estadoPedido,\n    onChange: function onChange(e) {\n      return cambiarEstadoPedido(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    value: \"COMPLETADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"COMPLETADO\"), __jsx(\"option\", {\n    value: \"PENDIENTE\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"PENDIENTE\"), __jsx(\"option\", {\n    value: \"CANCELADO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"CANCELADO\"))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-gray-800 font-bold mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, \"Resumen del Pedido\"), pedido.pedido.map(function (articulo) {\n    return __jsx(\"div\", {\n      key: articulo.id,\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, \"Producto: \", articulo.nombre, \" \"), __jsx(\"p\", {\n      className: \"text-sm text-gray-600\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"Cantidad: \", articulo.cantidad, \" \"));\n  }), __jsx(\"p\", {\n    className: \"text-gray-800 mt-3 font-bold \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Total a pagar:\", __jsx(\"span\", {\n    className: \"font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, \" $ \", total)), __jsx(\"button\", {\n    className: \"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\",\n    onClick: function onClick() {\n      return confirmarEliminarPedido();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Eliminar Pedido\", __jsx(\"svg\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    viewBox: \"0 0 24 24\",\n    className: \"w-4 h-4 ml-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, __jsx(\"path\", {\n    d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 166\n    }\n  })))));\n};\n\nexport default Pedido;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/components/Pedido.js"],"names":["React","useState","useEffect","gql","useMutation","Swal","ACTUALIZAR_PEDIDO","ELIMINAR_PEDIDO","OBTENER_PEDIDOS","Pedido","pedido","id","total","cliente","nombre","apellido","telefono","email","estado","actualizarPedido","update","cache","readQuery","query","obtenerPedidosVendedor","writeQuery","data","filter","eliminarPedido","estadoPedido","setEstadoPedido","clase","setClase","clasePedido","cambiarEstadoPedido","nuevoEstado","variables","input","console","log","confirmarEliminarPedido","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","e","target","map","articulo","cantidad"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport Swal from 'sweetalert2'\n\nconst ACTUALIZAR_PEDIDO = gql`\n    mutation actualizarPedido($id: ID!, $input: PedidoInput ) {\n        actualizarPedido(id: $id, input: $input) {\n            estado\n        }\n    }\n`;\nconst ELIMINAR_PEDIDO = gql`\n    mutation eliminarPedido($id: ID!) {\n        eliminarPedido(id: $id) \n    }\n`\n\nconst OBTENER_PEDIDOS = gql`\n  query obtenerPedidosVendedor {\n      obtenerPedidosVendedor {\n        id\n      }\n  }\n`\n\nconst Pedido = ({pedido}) => {\n\n\n    const { id, total, cliente: { nombre, apellido, telefono, email }, estado, cliente } = pedido;\n\n\n    // Mutation para cambiar el estado de un pedido\n    const [ actualizarPedido ] = useMutation(ACTUALIZAR_PEDIDO)\n    const [ eliminarPedido] = useMutation(ELIMINAR_PEDIDO, {\n        update(cache) {\n            const { obtenerPedidosVendedor } = cache.readQuery({\n                query: OBTENER_PEDIDOS\n            });\n\n            cache.writeQuery({\n                query: OBTENER_PEDIDOS,\n                data: {\n                    obtenerPedidosVendedor: obtenerPedidosVendedor.filter( pedido => pedido.id !== id )\n                }\n            })\n        }\n    })\n\n    // console.log(pedido)\n\n    const [ estadoPedido, setEstadoPedido ] = useState(estado);\n    const [ clase, setClase ] = useState('');\n\n    useEffect(() => {\n        if(estadoPedido) {\n            setEstadoPedido(estadoPedido)\n        }\n        clasePedido();\n    }, [ estadoPedido ]);\n\n    // Función que modifica el color del pedido de acuerdo a su estado\n    const clasePedido = () => {\n        if(estadoPedido === 'PENDIENTE') {\n            setClase('border-yellow-500')\n        } else if (estadoPedido === 'COMPLETADO') {\n            setClase('border-green-500')\n        } else {\n            setClase('border-red-800')\n        }\n    }\n\n    const cambiarEstadoPedido = async nuevoEstado => {\n        try {\n            const { data } = await actualizarPedido({\n                variables: {\n                    id, \n                    input: {\n                        estado: nuevoEstado,\n                        cliente: cliente.id\n                    }\n                }\n            });\n\n            setEstadoPedido(data.actualizarPedido.estado);\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const confirmarEliminarPedido = () => {\n\n        Swal.fire({\n            title: '¿Deseas eliminar a este pedido?',\n            text: \"Esta acción no se puede deshacer\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, Eliminar',\n            cancelButtonText: 'No, Cancelar'\n          }).then( async (result) => {\n            if (result.value) {\n                try {\n                    const data = await eliminarPedido({\n                        variables: {\n                            id\n                        }\n                    });\n\n                    Swal.fire(\n                        'Eliminado',\n                        data.eliminarPedido,\n                        'success'\n                    );\n\n\n                } catch (error) {\n                    console.log(error)\n                }\n                \n            }\n          })\n    }\n\n    return ( \n        <div className={` ${clase} border-t-4 mt-4 bg-white rounded p-6 md:grid md:grid-cols-2 md:gap-4 shadow-lg`}>\n            <div>\n                <p className=\"font-bold text-gray-800\">Cliente: {nombre} {apellido} </p>\n\n                {email && (\n                    <p className=\"flex items-center my-2\">\n                        <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 mr-2\"><path d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path></svg>\n                        {email}\n                    </p>\n                )}\n\n                {telefono && (\n                    <p className=\"flex items-center my-2\">\n                        <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 mr-2\"><path d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path></svg>\n                        {telefono}\n                    </p>\n                )}\n\n                <h2 className=\"text-gray-800 font-bold mt-10\">Estado Pedido:</h2>\n\n                <select\n                    className=\"mt-2 appearance-none bg-blue-600 border border-blue-600 text-white p-2 text-center rounded leading-tight focus:outline-none focus:bg-blue-600 focus:border-blue-500 uppercase text-xs font-bold \"\n                    value={estadoPedido}\n                    onChange={ e => cambiarEstadoPedido( e.target.value )  }\n                >\n                    <option value=\"COMPLETADO\">COMPLETADO</option>\n                    <option value=\"PENDIENTE\">PENDIENTE</option>\n                    <option value=\"CANCELADO\">CANCELADO</option>\n                </select>\n            </div>\n\n            <div>\n                <h2 className=\"text-gray-800 font-bold mt-2\">Resumen del Pedido</h2>\n                { pedido.pedido.map( articulo => (\n                    <div key={articulo.id} className=\"mt-4\">\n                        <p className=\"text-sm text-gray-600\">Producto: {articulo.nombre} </p>\n                        <p className=\"text-sm text-gray-600\">Cantidad: {articulo.cantidad} </p>\n                    </div>\n                ) ) }\n\n                <p className=\"text-gray-800 mt-3 font-bold \">Total a pagar:\n                    <span className=\"font-light\"> $ {total}</span>\n                </p>\n\n                <button\n                    className=\"uppercase text-xs font-bold  flex items-center mt-4 bg-red-800 px-5 py-2 inline-block text-white rounded leading-tight\"\n                    onClick={ () => confirmarEliminarPedido() }\n                >\n                    Eliminar Pedido\n\n                    <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-4 h-4 ml-2\"><path d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n\n                </button>\n            </div>\n        </div>\n     );\n}\n \nexport default Pedido;"]},"metadata":{},"sourceType":"module"}