{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nconst AUTENTICAR_USUARIO = gql`\n    mutation autenticarUsuario($input: AutenticarInput) {\n        autenticarUsuario(input: $input) {\n            token\n        }\n    }\n`;\n\nconst Login = () => {\n  // routing\n  const router = useRouter();\n  const {\n    0: mensaje,\n    1: guardarMensaje\n  } = useState(null); // Mutation para crear nuevos usuarios en apollo\n\n  const [autenticarUsuario] = useMutation(AUTENTICAR_USUARIO);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es vÃ¡lido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: async valores => {\n      // console.log(valores);\n      const {\n        email,\n        password\n      } = valores;\n\n      try {\n        const {\n          data\n        } = await autenticarUsuario({\n          variables: {\n            input: {\n              email,\n              password\n            }\n          }\n        });\n        console.log(data);\n        guardarMensaje('Autenticando...'); // Guardar el token en localstorage\n\n        setTimeout(() => {\n          const {\n            token\n          } = data.autenticarUsuario;\n          localStorage.setItem('token', token);\n        }, 1000); // Redireccionar hacia clientes\n\n        setTimeout(() => {\n          guardarMensaje(null);\n          router.push('/');\n        }, 2000);\n      } catch (error) {\n        guardarMensaje(error.message.replace('GraphQL error: ', '')); // console.log(error);\n\n        setTimeout(() => {\n          guardarMensaje(null);\n        }, 3000);\n      }\n    }\n  });\n\n  const mostrarMensaje = () => {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Login\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/pages/login.js"],"names":["React","useState","Layout","useFormik","Yup","gql","useMutation","useRouter","AUTENTICAR_USUARIO","Login","router","mensaje","guardarMensaje","autenticarUsuario","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","data","variables","input","console","log","setTimeout","token","localStorage","setItem","push","error","message","replace","mostrarMensaje","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,kBAAkB,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMI,KAAK,GAAG,MAAM;AAEhB;AACA,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAA4BX,QAAQ,CAAC,IAAD,CAA1C,CALgB,CAOhB;;AACA,QAAM,CAAEY,iBAAF,IAAwBP,WAAW,CAACE,kBAAD,CAAzC;AAEA,QAAMM,MAAM,GAAGX,SAAS,CAAC;AACrBY,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,gBAAgB,EAAEd,GAAG,CAACe,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAEZ,GAAG,CAACgB,MAAJ,GACMJ,KADN,CACY,uBADZ,EAEMK,QAFN,CAEe,4BAFf,CADkB;AAIzBJ,MAAAA,QAAQ,EAAEb,GAAG,CAACgB,MAAJ,GACGC,QADH,CACY,4BADZ;AAJe,KAAX,CALG;AAYrBC,IAAAA,QAAQ,EAAE,MAAMC,OAAN,IAAiB;AACvB;AACA,YAAM;AAAEP,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBM,OAA5B;;AAEA,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMX,iBAAiB,CAAC;AACrCY,UAAAA,SAAS,EAAE;AACPC,YAAAA,KAAK,EAAE;AACHV,cAAAA,KADG;AAEHC,cAAAA;AAFG;AADA;AAD0B,SAAD,CAAxC;AAQAU,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAZ,QAAAA,cAAc,CAAC,iBAAD,CAAd,CAVA,CAYA;;AACAiB,QAAAA,UAAU,CAAC,MAAM;AACb,gBAAM;AAAEC,YAAAA;AAAF,cAAYN,IAAI,CAACX,iBAAvB;AACAkB,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACH,SAHS,EAGP,IAHO,CAAV,CAbA,CAkBA;;AACAD,QAAAA,UAAU,CAAC,MAAM;AACbjB,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,UAAAA,MAAM,CAACuB,IAAP,CAAY,GAAZ;AACH,SAHS,EAGP,IAHO,CAAV;AAKH,OAxBD,CAwBE,OAAOC,KAAP,EAAc;AACZtB,QAAAA,cAAc,CAACsB,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsB,iBAAtB,EAAyC,EAAzC,CAAD,CAAd,CADY,CAEZ;;AAEAP,QAAAA,UAAU,CAAC,MAAM;AACbjB,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AAhDoB,GAAD,CAAxB;;AAqDA,QAAMyB,cAAc,GAAG,MAAM;AACzB,WACI;AAAK,MAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI1B,OAAJ,CADJ,CADJ;AAKH,GAND;;AASA,SAEI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAGKA,OAAO,IAAI0B,cAAc,EAH9B,EAKI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,gDADd;AAEI,IAAA,QAAQ,EAAEvB,MAAM,CAACwB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,eAJhB;AAKI,IAAA,QAAQ,EAAExB,MAAM,CAACyB,YALrB;AAMI,IAAA,MAAM,EAAEzB,MAAM,CAAC0B,UANnB;AAOI,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,MAAP,CAAczB,KAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAJJ,EAoBMF,MAAM,CAAC4B,OAAP,CAAe1B,KAAf,IAAwBF,MAAM,CAAC6B,MAAP,CAAc3B,KAAtC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAAC6B,MAAP,CAAc3B,KAAlB,CAFJ,CADF,GAKE,IAzBR,EA2BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,QAAQ,EAAEF,MAAM,CAACyB,YALrB;AAMI,IAAA,MAAM,EAAEzB,MAAM,CAAC0B,UANnB;AAOI,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,MAAP,CAAcxB,QAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CA3BJ,EA2CMH,MAAM,CAAC4B,OAAP,CAAezB,QAAf,IAA2BH,MAAM,CAAC6B,MAAP,CAAc1B,QAAzC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,MAAM,CAAC6B,MAAP,CAAc1B,QAAlB,CAFJ,CADF,GAKE,IAhDR,EAkDI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,wFAFd;AAGI,IAAA,KAAK,EAAC,mBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDJ,CADJ,CADJ,CALJ,CADJ,CAFJ;AAwEH,CAhJD;;AAkJA,eAAeR,KAAf","sourcesContent":["import React,Â {useState} from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router'\n\nconst AUTENTICAR_USUARIO = gql`\n    mutation autenticarUsuario($input: AutenticarInput) {\n        autenticarUsuario(input: $input) {\n            token\n        }\n    }\n`;\n\nconst Login = () => {\n\n    // routing\n    const router = useRouter();\n\n    const [mensaje, guardarMensaje] = useState(null);\n\n    // Mutation para crear nuevos usuarios en apollo\n    const [ autenticarUsuario ] = useMutation(AUTENTICAR_USUARIO);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        }, \n        validationSchema: Yup.object({\n            email: Yup.string()\n                        .email('El email no es vÃ¡lido')\n                        .required('El email no puede ir vacio'),\n            password: Yup.string()\n                        .required('El password es obligatorio')\n        }), \n        onSubmit: async valores => {\n            // console.log(valores);\n            const { email, password } = valores;\n\n            try {\n                const { data } = await autenticarUsuario({\n                    variables: {\n                        input: {\n                            email,\n                            password\n                        }\n                    }\n                });\n                console.log(data);\n                guardarMensaje('Autenticando...');\n\n                // Guardar el token en localstorage\n                setTimeout(() => {\n                    const { token } = data.autenticarUsuario;\n                    localStorage.setItem('token', token);\n                }, 1000);\n             \n                // Redireccionar hacia clientes\n                setTimeout(() => {\n                    guardarMensaje(null);\n                    router.push('/');\n                }, 2000);\n\n            } catch (error) {\n                guardarMensaje(error.message.replace('GraphQL error: ', ''));\n                // console.log(error);\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                }, 3000);\n            }\n        }\n    })\n\n\n\n    const mostrarMensaje = () => {\n        return(\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n                <p>{mensaje}</p>\n            </div>\n        )\n    }\n\n\n    return ( \n\n        <>\n            <Layout>\n                <h1 className=\"text-center text-2xl text-white font-light\">Login</h1>\n\n                {mensaje && mostrarMensaje() }\n\n                <div className=\"flex justify-center mt-5\">\n                    <div className=\"w-full max-w-sm\">\n                        <form\n                            className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Email Usuario\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.email}\n                                />\n                            </div>\n\n                            { formik.touched.email && formik.errors.email ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.email}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                                    Password\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password Usuario\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.password}\n                                />\n                            </div>\n\n                            { formik.touched.password && formik.errors.password ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.password}</p>\n                                </div>\n                            ) : null  }\n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\n                                value=\"Iniciar SesiÃ³n\"\n                            />\n\n                        </form>\n                    </div>\n                </div>\n            </Layout>\n        </>\n     );\n}\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}