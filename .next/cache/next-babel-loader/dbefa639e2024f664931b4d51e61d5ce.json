{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\pages\\\\nuevocliente.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nvar NUEVO_CLIENTE = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation nuevoCliente($input: ClienteInput) {\\n        nuevoCliente(input: $input) {\\n            id\\n            nombre\\n            apellido\\n            empresa\\n            email\\n            telefono\\n        }\\n    }\\n\"])));\nvar OBTENER_CLIENTES_USUARIO = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    query obtenerClientesVendedor {\\n        obtenerClientesVendedor {\\n            id\\n            nombre\\n            apellido\\n            empresa\\n            email\\n        }\\n    }\\n\\n\"])));\n\nvar NuevoCliente = function NuevoCliente() {\n  var router = useRouter(); // Mensaje de alerta\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      guardarMensaje = _useState[1]; // Mutation para crear nuevos clientes\n\n\n  var _useMutation = useMutation(NUEVO_CLIENTE, {\n    update: function update(cache, _ref) {\n      var nuevoCliente = _ref.data.nuevoCliente;\n\n      // Obtener el objeto de cache que deseamos actualizar\n      var _cache$readQuery = cache.readQuery({\n        query: OBTENER_CLIENTES_USUARIO\n      }),\n          obtenerClientesVendedor = _cache$readQuery.obtenerClientesVendedor; // Reescribimos el cache ( el cache nunca se debe modificar )\n\n\n      cache.writeQuery({\n        query: OBTENER_CLIENTES_USUARIO,\n        data: {\n          obtenerClientesVendedor: [].concat(_toConsumableArray(obtenerClientesVendedor), [nuevoCliente])\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoCliente = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      empresa: '',\n      email: '',\n      telefono: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El nombre del cliente es obligatorio'),\n      apellido: Yup.string().required('El apellido del cliente es obligatorio'),\n      empresa: Yup.string().required('El campo empresa  es obligatorio'),\n      email: Yup.string().email('Email no v√°lido').required('El email del cliente es obligatorio')\n    }),\n    onSubmit: function onSubmit(valores) {\n      var nombre, apellido, empresa, email, telefono, _await$nuevoCliente, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nombre = valores.nombre, apellido = valores.apellido, empresa = valores.empresa, email = valores.email, telefono = valores.telefono;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(nuevoCliente({\n                variables: {\n                  input: {\n                    nombre: nombre,\n                    apellido: apellido,\n                    empresa: empresa,\n                    email: email,\n                    telefono: telefono\n                  }\n                }\n              }));\n\n            case 4:\n              _await$nuevoCliente = _context.sent;\n              data = _await$nuevoCliente.data;\n              // console.log(data.nuevoCliente);\n              router.push('/'); // redireccionar hacia clientes\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n              setTimeout(function () {\n                guardarMensaje(null);\n              }, 2000);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 9]], Promise);\n    }\n  });\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Nuevo Cliente\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nombre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.apellido,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"empresa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, \"Empresa\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"empresa\",\n    type: \"text\",\n    placeholder: \"Empresa Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.empresa,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  })), formik.touched.empresa && formik.errors.empresa ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, formik.errors.empresa)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"telefono\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, \"Tel\\xE9fono\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"telefono\",\n    type: \"tel\",\n    placeholder: \"Tel\\xE9fono Cliente\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.telefono,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n    value: \"Registrar Cliente\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default NuevoCliente;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/pages/nuevocliente.js"],"names":["React","useState","Layout","useFormik","Yup","gql","useMutation","useRouter","NUEVO_CLIENTE","OBTENER_CLIENTES_USUARIO","NuevoCliente","router","mensaje","guardarMensaje","update","cache","nuevoCliente","data","readQuery","query","obtenerClientesVendedor","writeQuery","formik","initialValues","nombre","apellido","empresa","email","telefono","validationSchema","object","string","required","onSubmit","valores","variables","input","push","message","replace","setTimeout","mostrarMensaje","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router'\n\nconst NUEVO_CLIENTE = gql`\n    mutation nuevoCliente($input: ClienteInput) {\n        nuevoCliente(input: $input) {\n            id\n            nombre\n            apellido\n            empresa\n            email\n            telefono\n        }\n    }\n`;\n\nconst OBTENER_CLIENTES_USUARIO = gql`\n    query obtenerClientesVendedor {\n        obtenerClientesVendedor {\n            id\n            nombre\n            apellido\n            empresa\n            email\n        }\n    }\n\n`;\n\nconst NuevoCliente = () => {\n\n    const router = useRouter();\n\n    // Mensaje de alerta\n    const [mensaje, guardarMensaje] = useState(null);\n\n\n    // Mutation para crear nuevos clientes\n    const [ nuevoCliente ] = useMutation(NUEVO_CLIENTE, {\n        update(cache, { data: { nuevoCliente } } ) {\n            // Obtener el objeto de cache que deseamos actualizar\n            const { obtenerClientesVendedor¬†} = cache.readQuery({ query: OBTENER_CLIENTES_USUARIO  });\n\n            // Reescribimos el cache ( el cache nunca se debe modificar )\n            cache.writeQuery({\n                query: OBTENER_CLIENTES_USUARIO,\n                data: {\n                    obtenerClientesVendedor : [...obtenerClientesVendedor, nuevoCliente ]\n                }\n            })\n        }\n    })\n\n\n    const formik = useFormik({\n        initialValues: {\n            nombre: '',\n            apellido: '',\n            empresa: '',\n            email: '',\n            telefono: ''\n        },\n        validationSchema: Yup.object({\n            nombre: Yup.string() \n                        .required('El nombre del cliente es obligatorio'),\n            apellido: Yup.string() \n                        .required('El apellido del cliente es obligatorio'),\n            empresa: Yup.string() \n                        .required('El campo empresa  es obligatorio'),\n            email: Yup.string()\n                        .email('Email no v√°lido') \n                        .required('El email del cliente es obligatorio')\n        }), \n        onSubmit: async valores => {\n\n            const {nombre, apellido, empresa, email, telefono } = valores\n\n            try {\n                const { data } = await nuevoCliente({\n                    variables: {\n                        input: {\n                            nombre, \n                            apellido, \n                            empresa, \n                            email, \n                            telefono\n                        }\n                    }\n                });\n                // console.log(data.nuevoCliente);\n                router.push('/'); // redireccionar hacia clientes\n            } catch (error) {\n                guardarMensaje(error.message.replace('GraphQL error: ', ''));\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                }, 2000);\n            }\n        }\n    })\n\n    const mostrarMensaje = () => {\n        return(\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n                <p>{mensaje}</p>\n            </div>\n        )\n    }\n\n    return ( \n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Nuevo Cliente</h1>\n\n            {mensaje && mostrarMensaje() }\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n                    <form\n                        className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                        onSubmit={formik.handleSubmit}\n                    >\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                    Nombre\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"nombre\"\n                                    type=\"text\"\n                                    placeholder=\"Nombre Cliente\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.nombre}\n                                />\n                            </div>\n\n                            { formik.touched.nombre && formik.errors.nombre ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.nombre}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"apellido\">\n                                    Apellido\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"apellido\"\n                                    type=\"text\"\n                                    placeholder=\"Apellido Cliente\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.apellido}\n                                />\n                            </div>\n\n                            { formik.touched.apellido && formik.errors.apellido ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.apellido}</p>\n                                </div>\n                            ) : null  }\n\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"empresa\">\n                                    Empresa\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"empresa\"\n                                    type=\"text\"\n                                    placeholder=\"Empresa Cliente\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.empresa}\n                                />\n                            </div>\n\n                            { formik.touched.empresa && formik.errors.empresa ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.empresa}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Email Cliente\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.email}\n                                />\n                            </div>\n\n                            { formik.touched.email && formik.errors.email ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.email}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"telefono\">\n                                    Tel√©fono\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"telefono\"\n                                    type=\"tel\"\n                                    placeholder=\"Tel√©fono Cliente\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.telefono}\n                                />\n                            </div>\n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                                value=\"Registrar Cliente\"\n                            />\n                    </form>\n                </div>\n            </div>\n        </Layout>\n        \n     );\n}\n \nexport default NuevoCliente;"]},"metadata":{},"sourceType":"module"}