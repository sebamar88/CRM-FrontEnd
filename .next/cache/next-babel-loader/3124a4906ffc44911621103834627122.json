{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\pages\\\\nuevacuenta.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation, gql } from '@apollo/client';\nvar NUEVA_CUENTA = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation nuevoUsuario($input: UsuarioInput) {\\n        nuevoUsuario(input: $input) {\\n            id\\n            nombre\\n            apellido\\n            email\\n        }\\n    }\\n\"])));\n\nvar NuevaCuenta = function NuevaCuenta() {\n  // State para el mensaje\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      guardarMensaje = _useState[1]; // Mutation para crear nuevos usuarios\n\n\n  var _useMutation = useMutation(NUEVA_CUENTA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      nuevoUsuario = _useMutation2[0]; // Routing\n\n\n  var router = useRouter(); // Validación del formulario\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      apellido: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El Nombre es Obligatorio'),\n      apellido: Yup.string().required('El Apellido es obligatorio'),\n      email: Yup.string().email('El email no es válido').required('El email es obligatorio'),\n      password: Yup.string().required('El password no puede ir vacio').min(6, 'El password debe ser de al menos 6 caracteres')\n    }),\n    onSubmit: function onSubmit(valores) {\n      var nombre, apellido, email, password, _await$nuevoUsuario, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log('enviando');\n              // console.log(valores);\n              nombre = valores.nombre, apellido = valores.apellido, email = valores.email, password = valores.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(nuevoUsuario({\n                variables: {\n                  input: {\n                    nombre: nombre,\n                    apellido: apellido,\n                    email: email,\n                    password: password\n                  }\n                }\n              }));\n\n            case 4:\n              _await$nuevoUsuario = _context.sent;\n              data = _await$nuevoUsuario.data;\n              console.log(data); // Usuario creado correctamente\n\n              guardarMensaje(\"Se creo correctamente el Usuario: \".concat(data.nuevoUsuario.nombre, \" \"));\n              setTimeout(function () {\n                guardarMensaje(null);\n                router.push('/login');\n              }, 3000); // Redirigir usuario para iniciar sesión\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n              setTimeout(function () {\n                guardarMensaje(null);\n              }, 3000);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    }\n  }); // if(loading) return 'Cargando...';\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, mensaje && mostrarMensaje(), __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Crear Nueva Cuenta\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"nombre\",\n    type: \"text\",\n    placeholder: \"Nombre Usuario\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  })), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, formik.errors.nombre)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"apellido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"apellido\",\n    type: \"text\",\n    placeholder: \"Apellido Usuario\",\n    value: formik.values.apellido,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  })), formik.touched.apellido && formik.errors.apellido ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, formik.errors.apellido)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: \"Crear Cuenta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default NuevaCuenta;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/pages/nuevacuenta.js"],"names":["React","useState","useRouter","Layout","useFormik","Yup","useMutation","gql","NUEVA_CUENTA","NuevaCuenta","mensaje","guardarMensaje","nuevoUsuario","router","formik","initialValues","nombre","apellido","email","password","validationSchema","object","string","required","min","onSubmit","valores","variables","input","data","console","log","setTimeout","push","message","replace","mostrarMensaje","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AAEA,IAAMC,YAAY,GAAGD,GAAH,gQAAlB;;AAYA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB;AAFsB,kBAGYR,QAAQ,CAAC,IAAD,CAHpB;AAAA,MAGfS,OAHe;AAAA,MAGNC,cAHM,iBAKtB;;;AALsB,qBAMGL,WAAW,CAACE,YAAD,CANd;AAAA;AAAA,MAMdI,YANc,qBAQtB;;;AACA,MAAMC,MAAM,GAAGX,SAAS,EAAxB,CATsB,CAatB;;AACA,MAAMY,MAAM,GAAGV,SAAS,CAAC;AACrBW,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KADM;AAOrBC,IAAAA,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,CAAW;AACzBL,MAAAA,MAAM,EAAEX,GAAG,CAACiB,MAAJ,GACKC,QADL,CACc,0BADd,CADiB;AAGzBN,MAAAA,QAAQ,EAAEZ,GAAG,CAACiB,MAAJ,GACGC,QADH,CACY,4BADZ,CAHe;AAKzBL,MAAAA,KAAK,EAAEb,GAAG,CAACiB,MAAJ,GACMJ,KADN,CACY,uBADZ,EAEMK,QAFN,CAEe,yBAFf,CALkB;AAQzBJ,MAAAA,QAAQ,EAAEd,GAAG,CAACiB,MAAJ,GACGC,QADH,CACY,+BADZ,EAEGC,GAFH,CAEO,CAFP,EAEU,+CAFV;AARe,KAAX,CAPG;AAmBrBC,IAAAA,QAAQ,EAAE,kBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACN;AACA;AACQV,cAAAA,MAHF,GAGwCU,OAHxC,CAGEV,MAHF,EAGUC,QAHV,GAGwCS,OAHxC,CAGUT,QAHV,EAGoBC,KAHpB,GAGwCQ,OAHxC,CAGoBR,KAHpB,EAG2BC,QAH3B,GAGwCO,OAHxC,CAG2BP,QAH3B;AAAA;AAAA;AAAA,+CAOqBP,YAAY,CAAC;AAChCe,gBAAAA,SAAS,EAAG;AACRC,kBAAAA,KAAK,EAAE;AACHZ,oBAAAA,MAAM,EAANA,MADG;AAEHC,oBAAAA,QAAQ,EAARA,QAFG;AAGHC,oBAAAA,KAAK,EAALA,KAHG;AAIHC,oBAAAA,QAAQ,EAARA;AAJG;AADC;AADoB,eAAD,CAPjC;;AAAA;AAAA;AAOMU,cAAAA,IAPN,uBAOMA,IAPN;AAiBFC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAjBE,CAmBF;;AACAlB,cAAAA,cAAc,6CAAsCkB,IAAI,CAACjB,YAAL,CAAkBI,MAAxD,OAAd;AAEAgB,cAAAA,UAAU,CAAC,YAAM;AACbrB,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,gBAAAA,MAAM,CAACoB,IAAP,CAAY,QAAZ;AACH,eAHS,EAGP,IAHO,CAAV,CAtBE,CA2BF;;AA3BE;AAAA;;AAAA;AAAA;AAAA;AA8BFtB,cAAAA,cAAc,CAAC,YAAMuB,OAAN,CAAcC,OAAd,CAAsB,iBAAtB,EAAyC,EAAzC,CAAD,CAAd;AAEAH,cAAAA,UAAU,CAAC,YAAM;AACbrB,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACH,eAFS,EAEP,IAFO,CAAV;;AAhCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBW,GAAD,CAAxB,CAdsB,CAyEtB;;AAEA,MAAMyB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,WACI;AAAK,MAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI1B,OAAJ,CADJ,CADJ;AAKH,GAND;;AAQA,SAEI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,IAAI0B,cAAc,EAD9B,EAGI;AAAI,IAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAKI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,gDADd;AAEI,IAAA,QAAQ,EAAEtB,MAAM,CAACuB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,gBAJhB;AAKI,IAAA,KAAK,EAAEvB,MAAM,CAACwB,MAAP,CAActB,MALzB;AAMI,IAAA,QAAQ,EAAEF,MAAM,CAACyB,YANrB;AAOI,IAAA,MAAM,EAAEzB,MAAM,CAAC0B,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CALJ,EAqBM1B,MAAM,CAAC2B,OAAP,CAAezB,MAAf,IAAyBF,MAAM,CAAC4B,MAAP,CAAc1B,MAAvC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAAC4B,MAAP,CAAc1B,MAAlB,CAFJ,CADF,GAKE,IA1BR,EA4BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,KAAK,EAAEF,MAAM,CAACwB,MAAP,CAAcrB,QALzB;AAMI,IAAA,QAAQ,EAAEH,MAAM,CAACyB,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CA5BJ,EA2CMzB,MAAM,CAAC2B,OAAP,CAAexB,QAAf,IAA2BH,MAAM,CAAC4B,MAAP,CAAczB,QAAzC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,MAAM,CAAC4B,MAAP,CAAczB,QAAlB,CAFJ,CADF,GAKE,IAhDR,EAkDI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,eAJhB;AAKI,IAAA,KAAK,EAAEH,MAAM,CAACwB,MAAP,CAAcpB,KALzB;AAMI,IAAA,QAAQ,EAAEJ,MAAM,CAACyB,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAlDJ,EAiEMzB,MAAM,CAAC2B,OAAP,CAAevB,KAAf,IAAwBJ,MAAM,CAAC4B,MAAP,CAAcxB,KAAtC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,MAAM,CAAC4B,MAAP,CAAcxB,KAAlB,CAFJ,CADF,GAKE,IAtER,EAwEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,4CAAjB;AAA8D,IAAA,OAAO,EAAC,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKI;AACI,IAAA,SAAS,EAAC,4HADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,KAAK,EAAEJ,MAAM,CAACwB,MAAP,CAAcnB,QALzB;AAMI,IAAA,QAAQ,EAAEL,MAAM,CAACyB,YANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAxEJ,EAuFMzB,MAAM,CAAC2B,OAAP,CAAetB,QAAf,IAA2BL,MAAM,CAAC4B,MAAP,CAAcvB,QAAzC,GACE;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,MAAM,CAAC4B,MAAP,CAAcvB,QAAlB,CAFJ,CADF,GAKE,IA5FR,EA8FI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,wFAFd;AAGI,IAAA,KAAK,EAAC,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9FJ,CADJ,CADJ,CALJ,CADJ,CAFJ;AAoHH,CAvMD;;AAyMA,eAAeV,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation, gql } from '@apollo/client';\n\nconst NUEVA_CUENTA = gql`\n    mutation nuevoUsuario($input: UsuarioInput) {\n        nuevoUsuario(input: $input) {\n            id\n            nombre\n            apellido\n            email\n        }\n    }\n`;\n\n\nconst NuevaCuenta = () => {\n\n    // State para el mensaje\n    const [mensaje, guardarMensaje] = useState(null)\n\n    // Mutation para crear nuevos usuarios\n    const [ nuevoUsuario ] = useMutation(NUEVA_CUENTA);\n\n    // Routing\n    const router = useRouter();\n\n\n\n    // Validación del formulario\n    const formik = useFormik({\n        initialValues: {\n            nombre: '',\n            apellido: '',\n            email: '',\n            password: ''\n        }, \n        validationSchema: Yup.object({\n            nombre: Yup.string()\n                        .required('El Nombre es Obligatorio'), \n            apellido: Yup.string()\n                        .required('El Apellido es obligatorio'),\n            email: Yup.string()\n                        .email('El email no es válido')\n                        .required('El email es obligatorio'),\n            password: Yup.string()\n                        .required('El password no puede ir vacio')\n                        .min(6, 'El password debe ser de al menos 6 caracteres')\n        }),\n        onSubmit: async valores => {\n            // console.log('enviando');\n            // console.log(valores);\n            const { nombre, apellido, email, password } = valores\n            \n\n            try {\n                const { data } = await nuevoUsuario({\n                    variables : {\n                        input: {\n                            nombre,\n                            apellido,\n                            email,\n                            password\n                        }\n                    }\n                });\n                console.log(data);\n\n                // Usuario creado correctamente\n                guardarMensaje(`Se creo correctamente el Usuario: ${data.nuevoUsuario.nombre} `);\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                    router.push('/login')\n                }, 3000);\n\n                // Redirigir usuario para iniciar sesión\n\n            } catch (error) {\n                guardarMensaje(error.message.replace('GraphQL error: ', ''));\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                }, 3000);\n            }\n        }\n    });\n\n\n    // if(loading) return 'Cargando...';\n\n    const mostrarMensaje = () => {\n        return(\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n                <p>{mensaje}</p>\n            </div>\n        )\n    }\n\n    return ( \n\n        <>\n            <Layout> \n                {mensaje && mostrarMensaje() }\n\n                <h1 className=\"text-center text-2xl text-white font-light\">Crear Nueva Cuenta</h1>\n\n                <div className=\"flex justify-center mt-5\">\n                    <div className=\"w-full max-w-sm\">\n                        <form\n                            className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\n                            onSubmit={formik.handleSubmit}\n                        >\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                    Nombre\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"nombre\"\n                                    type=\"text\"\n                                    placeholder=\"Nombre Usuario\"\n                                    value={formik.values.nombre}\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                />\n                            </div>\n\n                            { formik.touched.nombre && formik.errors.nombre ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.nombre}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"apellido\">\n                                    Apellido\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"apellido\"\n                                    type=\"text\"\n                                    placeholder=\"Apellido Usuario\"\n                                    value={formik.values.apellido}\n                                    onChange={formik.handleChange}\n                                />\n                            </div>\n\n                            { formik.touched.apellido && formik.errors.apellido ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.apellido}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Email Usuario\"\n                                    value={formik.values.email}\n                                    onChange={formik.handleChange}\n                                />\n                            </div>\n\n                            { formik.touched.email && formik.errors.email ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.email}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                                    Password\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password Usuario\"\n                                    value={formik.values.password}\n                                    onChange={formik.handleChange}\n                                />\n                            </div>\n\n                            { formik.touched.password && formik.errors.password ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.password}</p>\n                                </div>\n                            ) : null  }\n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\n                                value=\"Crear Cuenta\"\n                            />\n\n                        </form>\n                    </div>\n                </div>\n            </Layout>\n        </>\n     );\n}\n \nexport default NuevaCuenta;"]},"metadata":{},"sourceType":"module"}