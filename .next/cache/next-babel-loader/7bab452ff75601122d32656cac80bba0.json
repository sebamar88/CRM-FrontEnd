{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\pages\\\\mejoresvendedores.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { gql, useQuery } from '@apollo/client';\nconst MEJORES_VENDEDORES = gql`\n    query mejoresVendedores {\n        mejoresVendedores {\n            vendedor {\n                nombre\n                email\n            }\n            total\n        }\n    }\n`;\n\nconst MejoresVendedores = () => {\n  const {\n    data,\n    loading,\n    error,\n    startPolling,\n    stopPolling\n  } = useQuery(MEJORES_VENDEDORES);\n  useEffect(() => {\n    startPolling(1000);\n    return () => {\n      stopPolling();\n    };\n  }, [startPolling, stopPolling]);\n  if (loading) return 'cargando...';\n  console.log(data);\n  const {\n    mejoresVendedores\n  } = data;\n  const vendedorGrafica = [];\n  mejoresVendedores.map((vendedor, index) => {\n    vendedorGrafica[index] = _objectSpread({}, vendedor.vendedor[0], {\n      total: vendedor.total\n    });\n  });\n  console.log(vendedorGrafica);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Mejores Vendedores\"), __jsx(ResponsiveContainer, {\n    width: '99%',\n    height: 550,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(BarChart, {\n    className: \"mt-10\",\n    width: 600,\n    height: 500,\n    data: vendedorGrafica,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), __jsx(XAxis, {\n    dataKey: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), __jsx(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), __jsx(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), __jsx(Bar, {\n    dataKey: \"total\",\n    fill: \"#3182CE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default MejoresVendedores;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/pages/mejoresvendedores.js"],"names":["React","useEffect","Layout","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","gql","useQuery","MEJORES_VENDEDORES","MejoresVendedores","data","loading","error","startPolling","stopPolling","console","log","mejoresVendedores","vendedorGrafica","map","vendedor","index","total","top","right","left","bottom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,QADJ,EACcC,GADd,EACoBC,KADpB,EAC2BC,KAD3B,EACkCC,aADlC,EACiDC,OADjD,EAC0DC,MAD1D,EACkEC,mBADlE,QAES,UAFT;AAGA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,MAAMG,iBAAiB,GAAG,MAAM;AAE5B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,YAAvB;AAAqCC,IAAAA;AAArC,MAAoDP,QAAQ,CAACC,kBAAD,CAAlE;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,WAAO,MAAM;AACTC,MAAAA,WAAW;AACd,KAFD;AAGH,GALQ,EAKN,CAACD,YAAD,EAAeC,WAAf,CALM,CAAT;AAOA,MAAGH,OAAH,EAAY,OAAO,aAAP;AAEZI,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAGA,QAAM;AAAEO,IAAAA;AAAF,MAAuBP,IAA7B;AAEA,QAAMQ,eAAe,GAAG,EAAxB;AAECD,EAAAA,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACxCH,IAAAA,eAAe,CAACG,KAAD,CAAf,qBACOD,QAAQ,CAACA,QAAT,CAAkB,CAAlB,CADP;AAEIE,MAAAA,KAAK,EAAEF,QAAQ,CAACE;AAFpB;AAIH,GALA;AAQDP,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGI,MAAC,mBAAD;AACI,IAAA,KAAK,EAAE,KADX;AAEI,IAAA,MAAM,EAAE,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,QAAD;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,KAAK,EAAE,GAFX;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,IAAI,EAAEA,eAJV;AAKI,IAAA,MAAM,EAAE;AACJK,MAAAA,GAAG,EAAE,CADD;AACIC,MAAAA,KAAK,EAAE,EADX;AACeC,MAAAA,IAAI,EAAE,EADrB;AACyBC,MAAAA,MAAM,EAAE;AADjC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,MAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcI,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CAJJ,CAHJ,CADJ;AA2BH,CA3DD;;AA6DA,eAAejB,iBAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Layout from '../components/Layout'\nimport {\n    BarChart, Bar,  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n  } from 'recharts';\nimport { gql, useQuery } from '@apollo/client';\n\nconst MEJORES_VENDEDORES = gql`\n    query mejoresVendedores {\n        mejoresVendedores {\n            vendedor {\n                nombre\n                email\n            }\n            total\n        }\n    }\n`;\n\nconst MejoresVendedores = () => {\n\n    const {data, loading, error, startPolling, stopPolling} = useQuery(MEJORES_VENDEDORES);\n\n  \n\n    useEffect(() => {\n        startPolling(1000);\n        return () => {\n            stopPolling();\n        }\n    }, [startPolling, stopPolling])\n\n    if(loading) return 'cargando...';\n\n    console.log(data);\n\n\n    const { mejoresVendedores} = data;\n    \n    const vendedorGrafica = [];\n\n     mejoresVendedores.map((vendedor, index) => {\n        vendedorGrafica[index] = {\n            ...vendedor.vendedor[0],\n            total: vendedor.total\n        }\n    })\n\n\n    console.log(vendedorGrafica);\n\n    return (\n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Mejores Vendedores</h1>\n\n            <ResponsiveContainer\n                width={'99%'}\n                height={550}\n            >\n                <BarChart\n                    className=\"mt-10\"\n                    width={600}\n                    height={500}\n                    data={vendedorGrafica}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"nombre\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"total\" fill=\"#3182CE\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </Layout>\n     );\n}\n \nexport default MejoresVendedores;"]},"metadata":{},"sourceType":"module"}