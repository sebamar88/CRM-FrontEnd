{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport fetch from 'node-fetch';\nimport { setContext } from 'apollo-link-context';\nconst httpLink = createHttpLink({\n  uri: 'https://pacific-bayou-12464.herokuapp.com/',\n  fetch\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // Leer el storage almacenado\n  const token = localStorage.getItem('token'); // console.log(token);\n\n  return {\n    headers: _objectSpread({}, headers, {\n      authorization: token ? `Bearer ${token}` : ''\n    })\n  };\n});\nconst client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nexport default client;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/config/apollo.js"],"names":["ApolloClient","createHttpLink","InMemoryCache","fetch","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","connectToDevTools","cache","link","concat"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC5BK,EAAAA,GAAG,EAAE,4CADuB;AAE5BH,EAAAA;AAF4B,CAAD,CAA/B;AAKA,MAAMI,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAE5C;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAH4C,CAI5C;;AAEA,SAAO;AACHH,IAAAA,OAAO,oBACAA,OADA;AAEHI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFxC;AADJ,GAAP;AAMH,CAZ0B,CAA3B;AAeA,MAAMI,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC5Be,EAAAA,iBAAiB,EAAE,IADS;AAE5BC,EAAAA,KAAK,EAAE,IAAId,aAAJ,EAFqB;AAG5Be,EAAAA,IAAI,EAAEV,QAAQ,CAACW,MAAT,CAAiBb,QAAjB;AAHsB,CAAjB,CAAf;AAMA,eAAeS,MAAf","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport fetch from 'node-fetch'\nimport { setContext } from 'apollo-link-context';\n\nconst httpLink = createHttpLink({\n    uri: 'https://pacific-bayou-12464.herokuapp.com/',\n    fetch   \n});\n\nconst authLink = setContext((_, { headers }) => {\n\n    // Leer el storage almacenado\n    const token = localStorage.getItem('token');\n    // console.log(token);\n\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : ''\n        }\n    }\n});\n\n\nconst client = new ApolloClient({\n    connectToDevTools: true,\n    cache: new InMemoryCache(),\n    link: authLink.concat( httpLink )\n});\n\nexport default client;"]},"metadata":{},"sourceType":"module"}