{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\pages\\\\login.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nvar AUTENTICAR_USUARIO = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation autenticarUsuario($input: AutenticarInput) {\\n        autenticarUsuario(input: $input) {\\n            token\\n        }\\n    }\\n\"])));\n\nvar Login = function Login() {\n  // routing\n  var router = useRouter();\n\n  var _useState = useState(null),\n      mensaje = _useState[0],\n      guardarMensaje = _useState[1]; // Mutation para crear nuevos usuarios en apollo\n\n\n  var _useMutation = useMutation(AUTENTICAR_USUARIO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      autenticarUsuario = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es v√°lido').required('El email no puede ir vacio'),\n      password: Yup.string().required('El password es obligatorio')\n    }),\n    onSubmit: function onSubmit(valores) {\n      var email, password, _await$autenticarUsua, data;\n\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(valores);\n              email = valores.email, password = valores.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(autenticarUsuario({\n                variables: {\n                  input: {\n                    email: email,\n                    password: password\n                  }\n                }\n              }));\n\n            case 4:\n              _await$autenticarUsua = _context.sent;\n              data = _await$autenticarUsua.data;\n              console.log(data);\n              guardarMensaje('Autenticando...'); // Guardar el token en localstorage\n\n              setTimeout(function () {\n                var token = data.autenticarUsuario.token;\n                localStorage.setItem('token', token);\n              }, 1000); // Redireccionar hacia clientes\n\n              setTimeout(function () {\n                guardarMensaje(null);\n                router.push('/');\n              }, 2000);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              guardarMensaje(_context.t0.message.replace('GraphQL error: ', '')); // console.log(error);\n\n              setTimeout(function () {\n                guardarMensaje(null);\n              }, 3000);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 12]], Promise);\n    }\n  });\n\n  var mostrarMensaje = function mostrarMensaje() {\n    return __jsx(\"div\", {\n      className: \"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, mensaje));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-center text-2xl text-white font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Login\"), mensaje && mostrarMensaje(), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    className: \"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, formik.errors.email)) : null, __jsx(\"div\", {\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, __jsx(\"label\", {\n    className: \"block text-gray-700 text-sm font-bold mb-2\",\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password Usuario\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  })), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"Error\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, formik.errors.password)) : null, __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\",\n    value: \"Iniciar Sesi\\xF3n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/pages/login.js"],"names":["React","useState","Layout","useFormik","Yup","gql","useMutation","useRouter","AUTENTICAR_USUARIO","Login","router","mensaje","guardarMensaje","autenticarUsuario","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","variables","input","data","console","log","setTimeout","token","localStorage","setItem","push","message","replace","mostrarMensaje","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React,¬†{useState} from 'react';\nimport Layout from '../components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router'\n\nconst AUTENTICAR_USUARIO = gql`\n    mutation autenticarUsuario($input: AutenticarInput) {\n        autenticarUsuario(input: $input) {\n            token\n        }\n    }\n`;\n\nconst Login = () => {\n\n    // routing\n    const router = useRouter();\n\n    const [mensaje, guardarMensaje] = useState(null);\n\n    // Mutation para crear nuevos usuarios en apollo\n    const [ autenticarUsuario ] = useMutation(AUTENTICAR_USUARIO);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        }, \n        validationSchema: Yup.object({\n            email: Yup.string()\n                        .email('El email no es v√°lido')\n                        .required('El email no puede ir vacio'),\n            password: Yup.string()\n                        .required('El password es obligatorio')\n        }), \n        onSubmit: async valores => {\n            // console.log(valores);\n            const { email, password } = valores;\n\n            try {\n                const { data } = await autenticarUsuario({\n                    variables: {\n                        input: {\n                            email,\n                            password\n                        }\n                    }\n                });\n                console.log(data);\n                guardarMensaje('Autenticando...');\n\n                // Guardar el token en localstorage\n                setTimeout(() => {\n                    const { token } = data.autenticarUsuario;\n                    localStorage.setItem('token', token);\n                }, 1000);\n             \n                // Redireccionar hacia clientes\n                setTimeout(() => {\n                    guardarMensaje(null);\n                    router.push('/');\n                }, 2000);\n\n            } catch (error) {\n                guardarMensaje(error.message.replace('GraphQL error: ', ''));\n                // console.log(error);\n\n                setTimeout(() => {\n                    guardarMensaje(null);\n                }, 3000);\n            }\n        }\n    })\n\n\n\n    const mostrarMensaje = () => {\n        return(\n            <div className=\"bg-white py-2 px-3 w-full my-3 max-w-sm text-center mx-auto\">\n                <p>{mensaje}</p>\n            </div>\n        )\n    }\n\n\n    return ( \n\n        <>\n            <Layout>\n                <h1 className=\"text-center text-2xl text-white font-light\">Login</h1>\n\n                {mensaje && mostrarMensaje() }\n\n                <div className=\"flex justify-center mt-5\">\n                    <div className=\"w-full max-w-sm\">\n                        <form\n                            className=\"bg-white rounded shadow-md px-8 pt-6 pb-8 mb-4\"\n                            onSubmit={formik.handleSubmit}\n                        >\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"Email Usuario\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.email}\n                                />\n                            </div>\n\n                            { formik.touched.email && formik.errors.email ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.email}</p>\n                                </div>\n                            ) : null  }\n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                                    Password\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password Usuario\"\n                                    onChange={formik.handleChange}\n                                    onBlur={formik.handleBlur}\n                                    value={formik.values.password}\n                                />\n                            </div>\n\n                            { formik.touched.password && formik.errors.password ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{formik.errors.password}</p>\n                                </div>\n                            ) : null  }\n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercas hover:cursor-pointer hover:bg-gray-900\"\n                                value=\"Iniciar Sesi√≥n\"\n                            />\n\n                        </form>\n                    </div>\n                </div>\n            </Layout>\n        </>\n     );\n}\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}