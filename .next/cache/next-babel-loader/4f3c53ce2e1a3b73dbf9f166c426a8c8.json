{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Seba\\\\Desktop\\\\Nueva carpeta (2)\\\\crmcliente\\\\context\\\\pedidos\\\\PedidoState.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\nimport { SELECCIONAR_CLIENTE, SELECCIONAR_PRODUCTO, CANTIDAD_PRODUCTOS, ACTUALIZAR_TOTAL } from '../../types';\n\nvar PedidoState = function PedidoState(_ref) {\n  var children = _ref.children;\n  // State de Pedidos\n  var initialState = {\n    cliente: {},\n    productos: [],\n    total: 0\n  };\n\n  var _useReducer = useReducer(PedidoReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Modifica el Cliente\n\n\n  var agregarCliente = function agregarCliente(cliente) {\n    // console.log(cliente);\n    dispatch({\n      type: SELECCIONAR_CLIENTE,\n      payload: cliente\n    });\n  }; // Modifica los productos\n\n\n  var agregarProducto = function agregarProducto(productosSeleccionados) {\n    var nuevoState;\n\n    if (state.productos.length > 0) {\n      // Tomar del segundo arreglo, una copia para asignarlo al primero\n      nuevoState = productosSeleccionados.map(function (producto) {\n        var nuevoObjeto = state.productos.find(function (productoState) {\n          return productoState.id === producto.id;\n        });\n        return _objectSpread({}, producto, {}, nuevoObjeto);\n      });\n    } else {\n      nuevoState = productosSeleccionados;\n    }\n\n    dispatch({\n      type: SELECCIONAR_PRODUCTO,\n      payload: nuevoState\n    });\n  }; // Modifica las cantidades de los productos\n\n\n  var cantidadProductos = function cantidadProductos(nuevoProducto) {\n    dispatch({\n      type: CANTIDAD_PRODUCTOS,\n      payload: nuevoProducto\n    });\n  };\n\n  var actualizarTotal = function actualizarTotal() {\n    dispatch({\n      type: ACTUALIZAR_TOTAL\n    });\n  };\n\n  return __jsx(PedidoContext.Provider, {\n    value: {\n      cliente: state.cliente,\n      productos: state.productos,\n      total: state.total,\n      agregarCliente: agregarCliente,\n      agregarProducto: agregarProducto,\n      cantidadProductos: cantidadProductos,\n      actualizarTotal: actualizarTotal\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \" \", children);\n};\n\nexport default PedidoState;","map":{"version":3,"sources":["C:/Users/Seba/Desktop/Nueva carpeta (2)/crmcliente/context/pedidos/PedidoState.js"],"names":["React","useReducer","PedidoContext","PedidoReducer","SELECCIONAR_CLIENTE","SELECCIONAR_PRODUCTO","CANTIDAD_PRODUCTOS","ACTUALIZAR_TOTAL","PedidoState","children","initialState","cliente","productos","total","state","dispatch","agregarCliente","type","payload","agregarProducto","productosSeleccionados","nuevoState","length","map","producto","nuevoObjeto","find","productoState","id","cantidadProductos","nuevoProducto","actualizarTotal"],"mappings":";;;;;;;;;;;AAAA,OAAQA,KAAR,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACIC,mBADJ,EAEIC,oBAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,QAKO,aALP;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAEhC;AACA,MAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,EADQ;AAEjBC,IAAAA,SAAS,EAAE,EAFM;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GAArB;;AAHgC,oBASJZ,UAAU,CAACE,aAAD,EAAgBO,YAAhB,CATN;AAAA,MASxBI,KATwB;AAAA,MASjBC,QATiB,mBAWhC;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAL,OAAO,EAAI;AAC9B;AAEAI,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,mBADD;AAELc,MAAAA,OAAO,EAAEP;AAFJ,KAAD,CAAR;AAIH,GAPD,CAZgC,CAqBhC;;;AACA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,sBAAsB,EAAI;AAE9C,QAAIC,UAAJ;;AACA,QAAGP,KAAK,CAACF,SAAN,CAAgBU,MAAhB,GAAyB,CAA5B,EAAgC;AAC5B;AACAD,MAAAA,UAAU,GAAGD,sBAAsB,CAACG,GAAvB,CAA4B,UAAAC,QAAQ,EAAI;AACjD,YAAMC,WAAW,GAAGX,KAAK,CAACF,SAAN,CAAgBc,IAAhB,CAAsB,UAAAC,aAAa;AAAA,iBAAIA,aAAa,CAACC,EAAd,KAAqBJ,QAAQ,CAACI,EAAlC;AAAA,SAAnC,CAApB;AACA,iCAAWJ,QAAX,MAAwBC,WAAxB;AACH,OAHY,CAAb;AAIH,KAND,MAMO;AACHJ,MAAAA,UAAU,GAAGD,sBAAb;AACH;;AAEDL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,oBADD;AAELa,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAjBD,CAtBgC,CAyChC;;;AACA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,aAAa,EAAI;AACvCf,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,kBADD;AAELY,MAAAA,OAAO,EAAEY;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BhB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJD;;AAOA,SACI,MAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADZ;AAEHC,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAFd;AAGHC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAHV;AAIHG,MAAAA,cAAc,EAAdA,cAJG;AAKHG,MAAAA,eAAe,EAAfA,eALG;AAMHU,MAAAA,iBAAiB,EAAjBA,iBANG;AAOHE,MAAAA,eAAe,EAAfA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAUGtB,QAVH,CADJ;AAcH,CAtED;;AAwEA,eAAeD,WAAf","sourcesContent":["import  React, { useReducer } from 'react';\nimport PedidoContext from './PedidoContext';\nimport PedidoReducer from './PedidoReducer';\n\nimport {\n    SELECCIONAR_CLIENTE,\n    SELECCIONAR_PRODUCTO,\n    CANTIDAD_PRODUCTOS,\n    ACTUALIZAR_TOTAL\n} from '../../types'\n\nconst PedidoState = ({children}) => {\n\n    // State de Pedidos\n    const initialState = {\n        cliente: {},\n        productos: [],\n        total: 0\n    }\n\n    const [ state, dispatch ] = useReducer(PedidoReducer, initialState);\n\n    // Modifica el Cliente\n    const agregarCliente = cliente => {\n        // console.log(cliente);\n\n        dispatch({\n            type: SELECCIONAR_CLIENTE,\n            payload: cliente\n        })\n    }\n\n    // Modifica los productos\n    const agregarProducto = productosSeleccionados => {\n\n        let nuevoState;\n        if(state.productos.length > 0 ) {\n            // Tomar del segundo arreglo, una copia para asignarlo al primero\n            nuevoState = productosSeleccionados.map( producto => {\n                const nuevoObjeto = state.productos.find( productoState => productoState.id === producto.id  );\n                return {...producto, ...nuevoObjeto }\n            } )\n        } else {\n            nuevoState = productosSeleccionados;\n        }\n       \n        dispatch({\n            type: SELECCIONAR_PRODUCTO,\n            payload: nuevoState\n        })\n    }\n\n    // Modifica las cantidades de los productos\n    const cantidadProductos = nuevoProducto => {\n        dispatch({\n            type: CANTIDAD_PRODUCTOS,\n            payload: nuevoProducto\n        })\n    }\n\n    const actualizarTotal = () => {\n        dispatch({\n            type: ACTUALIZAR_TOTAL\n        })\n    }\n\n\n    return (\n        <PedidoContext.Provider\n            value={{\n                cliente: state.cliente,\n                productos: state.productos,\n                total: state.total,\n                agregarCliente,\n                agregarProducto,\n                cantidadProductos,\n                actualizarTotal\n            }}\n        > {children}\n        </PedidoContext.Provider>\n    )\n}\n\nexport default PedidoState;"]},"metadata":{},"sourceType":"module"}